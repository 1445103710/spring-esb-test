package com.xmdj;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.3
 * 2019-10-30T15:48:24.576+08:00
 * Generated source version: 3.3.3
 *
 */
@WebServiceClient(name = "CommonService",
                  wsdlLocation = "CommonService.wsdl",
                  targetNamespace = "http://www.WebService.demo.example.com")
public class CommonService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.WebService.demo.example.com", "CommonService");
    public final static QName CommonServiceImplPort = new QName("http://www.WebService.demo.example.com", "CommonServiceImplPort");
    static {
        URL url = CommonService_Service.class.getResource("CommonService.wsdl");
        if (url == null) {
            url = CommonService_Service.class.getClassLoader().getResource("CommonService.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(CommonService_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "CommonService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CommonService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CommonService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CommonService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CommonService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CommonService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CommonService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CommonService
     */
    @WebEndpoint(name = "CommonServiceImplPort")
    public CommonService getCommonServiceImplPort() {
        return super.getPort(CommonServiceImplPort, CommonService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CommonService
     */
    @WebEndpoint(name = "CommonServiceImplPort")
    public CommonService getCommonServiceImplPort(WebServiceFeature... features) {
        return super.getPort(CommonServiceImplPort, CommonService.class, features);
    }

}
